name: Deploy to Production

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: "Build and Push Docker Images"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
         - dockerfile: ./inference/Dockerfile
           image: ghcr.io/Fastjur/inference
         - dockerfile: ./http_server/Dockerfile
           image: ghcr.io/Fastjur/frontend
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: |
            # Create a tag with the git commit hash
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/checkout@v2

      - name: "Terraform init"
        id: init
        working-directory: "terraform"
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: "Terraform validate"
        id: validate
        working-directory: "terraform"
        run: terraform validate -no-color

      - name: "Terraform apply"
        id: apply
        # Double check to only run on pushes to main (if someone alters the on push rules above)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: "terraform"
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}